apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sandee-frontend-alb
  namespace: sandee
  annotations:
    kubernetes.io/ingress.class: alb  # Use ALB Ingress Class for AWS Load Balancer
    alb.ingress.kubernetes.io/scheme: internet-facing  # Public access; use "internal" for private access
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'  # Listen on both HTTP and HTTPS
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:838645860193:certificate/19f0eb97-784f-4d85-bd1b-c6efabb9d8fa  # Update with your actual certificate ARN
    alb.ingress.kubernetes.io/target-type: ip  # Target traffic directly to pod IPs
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "10"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200-399"
    alb.ingress.kubernetes.io/healthcheck-port: "3000"


spec:
  ingressClassName: alb  # Specify ALB as the ingress class
  rules:
    - host: eks.sandee.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sandee-frontend  # Replace with your actual service name
                port:
                  number: 3000  # This should match the service port
    - host: sandee.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sandee-frontend  # Replace with your actual service name
                port:
                  number: 3000  # This should match the service port
